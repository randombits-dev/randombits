---
import {getCollection} from "astro:content";
import GuideCard from "./GuideCard.astro";

const {limit} = Astro.props;

const filter = (item) => !item.data.draft && !item.data.hide && (!limit || item.data.feature);

const posts = (await getCollection('articles')).filter(filter).sort(
    (a, b) => new Date(b.data.updated).valueOf() - new Date(a.data.updated).valueOf()
);

const postsToShow = limit ? posts.slice(0, limit) : posts;
---

<div class="grid grid-cols-1 lg:grid-cols-2 gap-10 place-items-stretch">
  <GuideCard title="Standard Notes Plugins"
             desc="A guide to creating and using plugins"
             collection="standard-notes" url="/standard-notes/" />
  <GuideCard title="Number Localization"
             desc="A comprehensive reference"
             collection="number-localization" />
  <GuideCard span="true" title="Stable Diffusion in the Cloud"
             desc="A guide to running automatic1111 stable diffusion servers in the cloud"
             collection="stable-diffusion"/>

  {
    postsToShow.map((post) => (
      <a href={'/articles/' + post.slug} class="card overflow-hidden ">
        <div class="text-xl px-5 pt-5 font-bold">{post.data.title}</div>
        <div class="my-3 mx-5">
          <div class="card-row-desc">{post.data.desc}</div>
          <div class="mt-5 text-sm font-bold flex items-end">
            <span class="flex-1">{post.data.updated.toLocaleDateString('en-US', {
              month: 'long',
              day: 'numeric',
              year: 'numeric'
            })}</span>
            <span class="tags">{
              post.data.tags?.map((tag) => (
                <div class="article-tag">{tag}</div>
              ))
            }</span>
          </div>


          </div>
      </a>
    ))
  }
<style>
  .card-row-text {
    cursor: pointer;
  }

</style>
